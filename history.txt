#V2
info for db
info for table stores
select * from session
select userId from type::thing('session', 'v35frlbwxsyxnt7nx4ioce9iatxgez14bgo845c6')
select userId.* from type::thing('session', 'v35frlbwxsyxnt7nx4ioce9iatxgez14bgo845c6')
select value userId.* from type::thing('session', 'v35frlbwxsyxnt7nx4ioce9iatxgez14bgo845c6')
select * from user
select ->(belongs_to where role = role:owner)->group as group from user:dhpw2fu39pvyz5s;
select ->(belongs_to where role = role:owner)->group as group from only user:dhpw2fu39pvyz5s limit 1
return (select ->(belongs_to where role = role:owner)->group as group from only user:dhpw2fu39pvyz5s limit 1).group
return (select ->(belongs_to where role = role:owner)->group as group from only user:dhpw2fu39pvyz5s limit 1).group[0]
return (select ->(belongs_to where role = role:owner)->group as group from user:dhpw2fu39pvyz5s)
return (select ->(belongs_to where role = role:owner)->group as group from user:dhpw2fu39pvyz5s).group
return (select ->(belongs_to where role = role:owner)->group as group from user:dhpw2fu39pvyz5s).group[0]
select * from belongs_to
select * from role
info for table user
info for db
select value <-belongs_to<-user.id from group
select * from user
select value->belongs_to->group.id AS groupId from only user:5qptm3mm0csr0v7
select value ->belongs_to->group.id AS groupId from only user:5qptm3mm0csr0v7
select * from invite
select * from belongs_to
RELATE user:5qptm3mm0csr0v7->belongs_to->group:c38pxzarsg9uvjv25t6w SET role = role:member
select * from belongs_to
belongs_to:5bw2cgmlcqgoaadb2oyt
RELATE user:5qptm3mm0csr0v7->belongs_to->group:c38pxzarsg9uvjv25t6w SET role = role:member
select * from belongs_to
delete belongs_to where role = role:member return before
select * from belongs_to
info for table belongs_to
RELATE user:5qptm3mm0csr0v7->belongs_to->group:c38pxzarsg9uvjv25t6w SET role = role:member
select * from belongs_to
select * from group
select <-belongs_to<-user from group
select <-belongs_to<-user.* from group
select <-belongs_to<-user.* as u from group
fn::role_for_container(container:1)
create container:1 set name = 'c1', visibility = role:owner
relate group:c38pxzarsg9uvjv25t6w->stores->container:1
info for table role
info for db
select * from invite
select count() from invite
select count() from invite group all
delete invite
info for db
select * from container
select * from stores
delete container
select * from container
select * from stores
type::thing('container', '018dbb37-2d2e-7904-a107-b22a56075b0f')
type::thing('container', '018dbb37-2d2e-7904-a107-b22a56075b0f').id
type::thing('container', '018dbb37-2d2e-7904-a107-b22a56075b0e').id
select * from container
delete container
select * from container
delete container
select * from container
update container set contents = ['noice'] return after
update container set contents = null
update container set contents = []
update container set contents = ['wow']
select * from container
info for table container
update container set contents = 'noice'
update container set contents = ['noice']
update container set contents += 'noice'
update container set contents = ['noice']
update container set contents = []
select * from container
update container set contents = []
select * from container
container:1 = none
container:1 = null
type::thing('container','1000')
type::thing('container','1000') = none
type::thing('container','1000') = null
type::thing('container','1000').id
select * from type::thing('container','1000')
select * from role
delete role
select * from role
select * from container
select * from role
select * from migration
delete migration
select * from container
update container set tags = []
select * from container
update container set label = name, type = description
remove field name on container
remove field description on container
select * from container
update container set description = none, name = none
remove field tags on container
update container set tags = none
info for table container
